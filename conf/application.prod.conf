include "application.conf"

# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.postgresql.Driver
db.default.url=${DATABASE_URL}
db.default.slickdriver="myUtils.MyPostgresDriver"
db.default.idleMaxAge=10 minutes
db.default.idleConnectionTestPeriod=10 seconds
db.default.connectionTimeout=20 second
db.default.connectionTestStatement="SELECT 1"
db.default.maxConnectionAge=30 minutes
db.default.partitionCount=3
db.default.maxConnectionsPerPartition=5
db.default.minConnectionsPerPartition=5
# Slick Evolutions
# ~~~~~
# slick.default="models.current.dao.*"
slick.default="models.*"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG



# Silhouette
silhouette {

  # Authenticator settings
//  authenticator.cookieDomain="play-silhouette-seed.mohiva.cloudbees.net"

  # Facebook provider
  facebook.authorizationURL="https://graph.facebook.com/oauth/authorize"
  facebook.accessTokenURL="https://graph.facebook.com/oauth/access_token"
  facebook.redirectURL="http://localhost:9000/authenticate/facebook"
  facebook.clientID=${?FACEBOOK_CLIENT_ID}
  facebook.clientSecret=${?FACEBOOK_CLIENT_SECRET}
  facebook.scope="email"

  # Google provider
  google.authorizationURL="https://accounts.google.com/o/oauth2/auth"
  google.accessTokenURL="https://accounts.google.com/o/oauth2/token"
  google.redirectURL="http://mealchooser-backend.herokuapp.com/authenticate/google"
  google.clientID=${?GOOGLE_CLIENT_ID}
  google.clientSecret=${?GOOGLE_CLIENT_SECRET}
  google.scope="profile email"

}

# Clodinary
cloudinary = {
  cloud_name = ${?CLOUDINARY_CLOUD_NAME}
  api_key = ${?CLOUDINARY_API_KEY}
  api_secret = ${?CLOUDINARY_API_SECRET}
  secure=true
}

# JS-app variables
isDevelopment=false

# Play Mailer
smtp.host=smtp.sendgrid.net
smtp.user=${?SENDGRID_USERNAME}
smtp.password=${?SENDGRID_PASSWORD}
smtp.port=587
smtp.tls=yes

include "silhouette.conf"
